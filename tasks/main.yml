---
- name: Find existing systemd-network config files
  find:
    paths:
      - /etc/systemd/networkd.conf.d/
      - /etc/systemd/network/
    patterns:
      - "*.conf"
      - "*.netdev"
      - "*.network"
  register: systemd_network_existing_config_files
  when: not systemd_network_keep_existing_definitions

- name: Calculate which systemd-network config files to delete
  set_fact:
    systemd_network_confs_to_delete: >-
      {{
        systemd_network_existing_config_files.files
        | map(attribute='path')
        | select("match", "^/etc/systemd/networkd\.conf\.d/.*\.conf$")
        | map('basename') | map('splitext') | map('first')
        | difference((systemd_network_confs | combine).keys())
      }}
    systemd_network_netdevs_to_delete: >-
      {{
        systemd_network_existing_config_files.files
        | map(attribute='path')
        | select("match", "^/etc/systemd/network/.*\.netdev$")
        | map('basename') | map('splitext') | map('first')
        | difference((systemd_network_netdevs | combine).keys())
      }}
    systemd_network_networks_to_delete: >-
      {{
        systemd_network_existing_config_files.files
        | map(attribute='path')
        | select("match", "^/etc/systemd/network/.*\.network$")
        | map('basename') | map('splitext') | map('first')
        | difference((systemd_network_networks | combine).keys())
      }}
  when: not systemd_network_keep_existing_definitions

- name: Create extra directories relevant for systemd-networkd
  file:
    path: "{{ item | dirname }}"
    state: directory
  loop: "{{ systemd_network_copy_files | map(attribute='dest') | list + ['/etc/systemd/networkd.conf.d/'] }}"

- name: Instantiate systemd-networkd networkd.conf drop-ins
  template:
    src: conf.j2
    dest: /etc/systemd/networkd.conf.d/{{ conf.key }}.conf
    owner: systemd-network
    mode: 0640
  loop: "{{ systemd_network_confs | combine | dict2items }}"
  loop_control:
    loop_var: conf
    label: "{{ conf.key }}"
  notify:
    - Reload systemd configuration
    - Restart systemd-networkd service

- name: Instantiate systemd-networkd network devices
  template:
    src: netdev.j2
    dest: /etc/systemd/network/{{ netdev.key }}.netdev
    owner: systemd-network
    mode: 0640
  loop: "{{ systemd_network_netdevs | combine | dict2items }}"
  loop_control:
    loop_var: netdev
    label: "{{ netdev.key }}"
  notify:
    - Reload systemd configuration
    - Restart systemd-networkd service

- name: Instantiate systemd-networkd networks
  template:
    src: network.j2
    dest: /etc/systemd/network/{{ network.key }}.network
    owner: systemd-network
    mode: 0640
  loop: "{{ systemd_network_networks | combine | dict2items }}"
  loop_control:
    loop_var: network
    label: "{{ network.key }}"
  notify:
    - Reload systemd configuration
    - Restart systemd-networkd service

- name: Copy extra files relevant for systemd-networkd
  copy: "{{ item }}"
  loop: "{{ systemd_network_copy_files }}"
  notify:
    - Restart systemd-networkd service

- name: Configure resolv.conf
  file:
    dest: /etc/resolv.conf
    state: link
    src: "{{ _systemd_network_resolv_conf_paths[systemd_network_dns_resolver] }}"
    force: True
    follow: False

- name: Populate service facts
  service_facts: {}

- name: Disable unwanted resolvers
  service:
    name: "{{ item }}"
    enabled: False
    state: stopped
  when: "(item + '.service') in ansible_facts.services"
  loop: "{{ _systemd_network_resolv_conf_paths.keys() | difference([systemd_network_dns_resolver]) }}"

- name: Enable wanted resolver
  service:
    name: "{{ systemd_network_dns_resolver }}"
    enabled: True
    state: started

- name: Delete existing unwanted network interfaces
  shell: |
    if [ ! -e /sys/class/net/{{ interface_name | quote }} ]; then
      exit 128
    fi
    ip link delete {{ interface_name | quote }}
  # From `man ip`:
  # Exit status is 0 if command was successful, and 1 if there is a syntax error.  If an error was reported by the kernel exit status is 2.
  register: result
  failed_when: result.rc not in [0, 128]
  changed_when: result.rc != 128
  notify:
    - Restart systemd-networkd service
  loop: "{{ systemd_network_netdevs_to_delete }}"
  loop_control:
    loop_var: interface_name
  when: not systemd_network_keep_existing_definitions


- name: Delete existing unwanted systemd-networkd configs
  file:
    state: absent
    path: "{{ path }}"
  notify:
    - Reload systemd configuration
    - Restart systemd-networkd service
  loop: >-
    {{
      systemd_network_confs_to_delete | map('regex_replace', '^', '/etc/systemd/networkd.conf.d/') | map('regex_replace', '$', '.conf')
      +
      systemd_network_netdevs_to_delete | map('regex_replace', '^', '/etc/systemd/network/') | map('regex_replace', '$', '.netdev')
      +
      systemd_network_networks_to_delete | map('regex_replace', '^', '/etc/systemd/network/') | map('regex_replace', '$', '.network')
    }}
  loop_control:
    loop_var: path
  when: not systemd_network_keep_existing_definitions

- meta: flush_handlers

- name: Enable systemd-networkd service
  service:
    name: systemd-networkd
    enabled: True
    state: started

- name: Disable legacy networking
  service:
    name: networking
    enabled: False
    state: stopped

- name: Remove /etc/network/interfaces
  file:
    path: /etc/network/interfaces
    state: absent
